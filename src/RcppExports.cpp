// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// chunker
DataFrame chunker(DataFrame seq_table, int window_size);
RcppExport SEXP _prider_chunker(SEXP seq_tableSEXP, SEXP window_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type seq_table(seq_tableSEXP);
    Rcpp::traits::input_parameter< int >::type window_size(window_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(chunker(seq_table, window_size));
    return rcpp_result_gen;
END_RCPP
}
// make_degenerate_sequence
StringVector make_degenerate_sequence(StringVector sequences, int sequence_length, double cutoff);
RcppExport SEXP _prider_make_degenerate_sequence(SEXP sequencesSEXP, SEXP sequence_lengthSEXP, SEXP cutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type sequences(sequencesSEXP);
    Rcpp::traits::input_parameter< int >::type sequence_length(sequence_lengthSEXP);
    Rcpp::traits::input_parameter< double >::type cutoff(cutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(make_degenerate_sequence(sequences, sequence_length, cutoff));
    return rcpp_result_gen;
END_RCPP
}
// process_blast_table
List process_blast_table(std::string filename, int hit_len);
RcppExport SEXP _prider_process_blast_table(SEXP filenameSEXP, SEXP hit_lenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< int >::type hit_len(hit_lenSEXP);
    rcpp_result_gen = Rcpp::wrap(process_blast_table(filename, hit_len));
    return rcpp_result_gen;
END_RCPP
}
// unique_network
DataFrame unique_network(DataFrame network);
RcppExport SEXP _prider_unique_network(SEXP networkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type network(networkSEXP);
    rcpp_result_gen = Rcpp::wrap(unique_network(network));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_prider_chunker", (DL_FUNC) &_prider_chunker, 2},
    {"_prider_make_degenerate_sequence", (DL_FUNC) &_prider_make_degenerate_sequence, 3},
    {"_prider_process_blast_table", (DL_FUNC) &_prider_process_blast_table, 2},
    {"_prider_unique_network", (DL_FUNC) &_prider_unique_network, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_prider(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
